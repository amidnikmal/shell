{"version":3,"file":"js/139.4b88c45f.js","mappings":"uLAKO,MAAMA,EAAU,CACrBC,OAAQ,iCACRC,OAAQ,GACRC,UAAW,GACXC,cAAe,KAEfC,aAAc,GAEdC,OAAQ,GAERC,GAAI,KAEJC,OAAQ,SAGRC,aAAaD,GAMX,OALAE,KAAKF,OAASA,EAEdE,KAAKL,aAAe,GACpBK,KAAKJ,OAAS,GAEPI,KAAKC,eAAeD,KAAKF,SAGlCI,GAAGC,EAAON,GACRG,KAAKH,GAAKA,GAGZO,aAEE,OAAOC,QAAQC,QAAQC,EAAAA,yBAGzBC,gBAAe,OAAEV,EAAF,MAAUW,IACvB,OAAOC,IAAAA,IAAW,GAAEV,KAAKT,uBAAuBS,KAAKF,OAASE,KAAKF,OAASA,WAAgBW,MAG9FE,aACEX,KAAKN,cAAgB,IAAIkB,UAAU,mCACnCZ,KAAKa,gBAGPA,eACEb,KAAKN,cAAcoB,iBAAiB,QAAQ,KAC1Cd,KAAKN,cAAcqB,UAAaC,IAE9B,MAAMC,EAAOC,KAAKC,MAAMH,EAAMC,MAE9B,GAAIA,EAAKG,QAAWpB,KAAKF,OAAOuB,cAAc,SAA9C,CAOA,GAFArB,KAAKL,aAAa2B,KAAKL,GAEnBjB,KAAKuB,eAAwC,IAAvBvB,KAAKJ,OAAO4B,OAAc,CAClD,MAAM,aAAEC,GAAiBzB,KAAKuB,eAEtBG,GAAe1B,KAAKL,aAAagC,QAAQC,IAC7C,MAAM,EAAEC,EAAF,EAAMC,GAAOF,EAAUX,KAC7B,OAAOY,GAAKJ,EAAe,GAAKK,GAAKL,EAAe,KAIpDC,IACF1B,KAAKJ,OAAO0B,KAAKI,GAEjB1B,KAAKH,GAAG6B,GAER1B,KAAKL,aAAe,IAIxB,GAAIK,KAAKJ,OAAO4B,OAAS,EAAG,CAC1B,MAAMO,EAAQ/B,KAAKJ,OAAO4B,OAAO,EAC3BQ,EAAYhC,KAAKJ,OAAOmC,IACtBD,EAAGL,GAAiBO,EAAUf,MAE9BgB,GAAoBjC,KAAKL,aAAagC,QAAQC,IAClD,MAAM,EAAEC,GAAOD,EAAUX,KACzB,OAAOY,IAAMJ,EAAe,KAG5BQ,IACFjC,KAAKJ,OAAO0B,KAAKW,GAEjBjC,KAAKH,GAAGoC,GAERjC,KAAKL,aAAe,OAIxB,MAAMuC,EAAS,CACb,OAAS,YACT,OAAS,CACP,yBACAlC,KAAKF,OAAOuB,cAAc,YAC1BrB,KAAKF,OAAOuB,cAAc,YAC1BrB,KAAKF,OAAOuB,cAAc,UAE5B,GAAK,GAETrB,KAAKN,cAAcyC,KAAKjB,KAAKkB,UAAUF,QAI3CG,qBAAqBvC,GAGnB,OAFAE,KAAKW,aAEE,IAAIN,SAAWC,IACpBgC,YAAWD,UACT,MAAM,KAAEpB,SAAejB,KAAKQ,eAAe,CAAEV,OAAAA,EAAQW,MAAO,MAC5DT,KAAKuB,cAAgBN,EACrBX,EAAQW,KACP","sources":["webpack://shell/./src/Binance.js"],"sourcesContent":["\nimport axios from 'axios'\nimport { BinanceSymbolsResponse } from './BinanceSymbolsResponse'\n\n\nexport const Binance = {\n  apiUrl: 'https://www.binance.com/api/v3',\n  apiKey: '',\n  apiSecret: '',\n  wssconnection: null,\n\n  eventsBuffer: [],\n\n  events: [],\n\n  cb: null,\n\n  symbol: 'BNBBTC',\n\n\n  changeSymbol(symbol) {\n    this.symbol = symbol\n\n    this.eventsBuffer = []\n    this.events = []\n\n    return this.startFetchData(this.symbol)\n  },\n\n  on(topic, cb) {\n    this.cb = cb\n  },\n\n  getSymbols() {\n    // return axios.get('https://www.binance.com/bapi/margin/v1/friendly/margin/symbols')\n    return Promise.resolve(BinanceSymbolsResponse)\n  },\n\n  getMarketDepth({ symbol, limit }) {\n    return axios.get(`${this.apiUrl}/depth?symbol=${this.symbol ? this.symbol : symbol}&limit=${limit}`)\n  },\n\n  wssConnect() {\n    this.wssconnection = new WebSocket('wss://stream.binance.com/stream')\n    this.wssSubscribe()\n  },\n\n  wssSubscribe() {\n    this.wssconnection.addEventListener('open', () => {\n      this.wssconnection.onmessage = (event) => {\n\n        const data = JSON.parse(event.data)\n\n        if (data.stream != (this.symbol.toLowerCase()+\"@depth\")) {\n          return;\n        }\n\n\n        this.eventsBuffer.push(data)\n\n        if (this.depthSnapshot && this.events.length === 0) {\n          const { lastUpdateId } = this.depthSnapshot\n\n          const [ firstEvent ] = this.eventsBuffer.filter((eventItem) => {\n              const { U , u }  = eventItem.data\n              return U <= lastUpdateId + 1 && u >= lastUpdateId + 1\n            })\n        \n            \n          if (firstEvent) {\n            this.events.push(firstEvent)\n\n            this.cb(firstEvent)\n\n            this.eventsBuffer = []\n          }\n        }\n\n        if (this.events.length > 0) {\n          const index = this.events.length-1\n          const prevEvent = this.events[index]\n          const { u: lastUpdateId } = prevEvent.data\n\n          const [ subsequentEvent ] = this.eventsBuffer.filter((eventItem) => {\n              const { U }  = eventItem.data\n              return U === lastUpdateId + 1\n            })\n\n          if (subsequentEvent) {\n            this.events.push(subsequentEvent)\n\n            this.cb(subsequentEvent)\n\n            this.eventsBuffer = []\n          }\n        }\n      }\n        const params = {\n          \"method\":\"SUBSCRIBE\",\n          \"params\":[\n            \"!miniTicker@arr@3000ms\",\n            this.symbol.toLowerCase()+\"@aggTrade\",\n            this.symbol.toLowerCase()+\"@kline_1d\",\n            this.symbol.toLowerCase()+\"@depth\"\n          ],\n          \"id\":1\n        }\n      this.wssconnection.send(JSON.stringify(params))\n    })\n  },\n\n  async startFetchData(symbol) {\n    this.wssConnect()\n\n    return new Promise ( (resolve)=> {\n      setTimeout(async () => {\n        const { data } = await this.getMarketDepth({ symbol, limit: 500 })\n        this.depthSnapshot = data\n        resolve(data)\n      }, 3000)\n    })\n   \n    \n  }\n}\n"],"names":["Binance","apiUrl","apiKey","apiSecret","wssconnection","eventsBuffer","events","cb","symbol","changeSymbol","this","startFetchData","on","topic","getSymbols","Promise","resolve","BinanceSymbolsResponse","getMarketDepth","limit","axios","wssConnect","WebSocket","wssSubscribe","addEventListener","onmessage","event","data","JSON","parse","stream","toLowerCase","push","depthSnapshot","length","lastUpdateId","firstEvent","filter","eventItem","U","u","index","prevEvent","subsequentEvent","params","send","stringify","async","setTimeout"],"sourceRoot":""}